# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest
stages:
  - stage: TerraformValidate
    jobs:
    - job: terrafformValidateJob
      continueOnError: false
      steps:
         - task: PublishPipelineArtifact@1
           inputs:
             targetPath: '$(Pipeline.Workspace)'
             artifact: 'manifest-out'
             publishLocation: 'pipeline'
         - task: TerraformTaskV4@4
           inputs:
             provider: 'azurerm'
             command: 'init'
             workingDirectory: '$(System.DefaultWorkingDirectory)/manifest1'
             backendAzureRmUseEntraIdForAuthentication: true
             backendServiceArm: 'aks-terraform'
             backendAzureRmResourceGroupName: 'terraform-storage-rg'
             backendAzureRmStorageAccountName: 'terraformtfstate1844'
             backendAzureRmContainerName: 'tfstatefiles'
             backendAzureRmKey: 'aks-base.tfstate'
         - task: TerraformTaskV4@4
           inputs:
             provider: 'azurerm'
             command: 'validate'
             workingDirectory: '$(System.DefaultWorkingDirectory)/manifest1'
         
         