trigger:

- master

pool:
  vmImage: ubuntu-latest
# Define variables for Environments
variables:
- name: DEV_ENVIRONMENT
  value: dev
- name: QA_ENVIRONMENT
  value: qa
##Stage-1: Terraform Validate Stage

## Step-1: Publish Artifacts to Pipeline (Pipeline artifacts provide a way to share files between stages in a pipeline or between different pipelines. )
## Step-2: Install Latest Terraform (0.13.5) (Ideally not needed if we use default Ubuntu Agents)
## Step-3: Validate Terraform Manifests (terraform init, terraform validate)
stages:
- stage: TerraformValidate
  jobs:
  - job: TerraformValidateJob
    continueOnError: false
    steps:
    - task: PublishPipelineArtifact@1
      displayName: Publish Artifacts
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/terraform-manifests'
        artifact: 'terraform-manifests-out'
        publishLocation: 'pipeline'
    - task: TerraformInstaller@0
      displayName: Terraform Install
      inputs:
        terraformVersion: 'latest'
    - task: TerraformCLI@0
      displayName: 'terraform init'
      inputs:
        command: init
        backendType: azurerm
        workingDirectory: $(System.DefaultWorkingDirectory)/terraform-manifests
        # Service connection to authorize backend access. Supports Subscription & Management Group Scope
        backendServiceArm: 'terraform-aks-azurerm-svc-con'
        backendAzureRmResourceGroupName: 'terraform-storage-rg'
        backendAzureRmStorageAccountName: 'terraformtfstate1844'
        # azure blob container to store the state file
        backendAzureRmContainerName: 'tfstatefiles'
        # azure blob file name
        backendAzureRmKey: aks-base.tfstate
        allowTelemetryCollection: false
    - task: TerraformCLI@2
      displayName: Terraform Validate
      inputs:
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-manifests'
        allowTelemetryCollection: false
- stage: DeployAKScluster
  jobs:
  - deployment: DeployDevAKScluster
    displayName: DeployDevAKScluster
    pool:
      vmImage: ubuntu-latest
    environment: $(DEV_ENVIRONMENT)